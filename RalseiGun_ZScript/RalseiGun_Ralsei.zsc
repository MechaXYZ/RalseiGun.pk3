// powerups for stuff
class RalseiGun_StayPowerup : Powerup
{
	Default
	{
   	    Powerup.Duration -2147483647; // 68 fucking years
	}
}

class RalseiGun_Stay : PowerupGiver
{
	Default
	{
   	    Powerup.Type "RalseiGun_StayPowerup";
   	    +INVENTORY.AUTOACTIVATE;
		+INVENTORY.UNDROPPABLE;
		+INVENTORY.PERSISTENTPOWER;
	}
}

/*

might bring passive back if i find a way

class RalseiGun_PassivePowerup : Powerup
{
	Default
	{
   	    Powerup.Duration -2147483647; // 68 fucking years
	}
}

class RalseiGun_Passive : PowerupGiver
{
	Default
	{
   	    Powerup.Type "RalseiGun_PassivePowerup";
   	    +INVENTORY.AUTOACTIVATE;
		+INVENTORY.UNDROPPABLE;
		+INVENTORY.PERSISTENTPOWER;
	}
}

*/

class RalseiGun_ActivePowerup : Powerup
{
	Default
	{
   	    Powerup.Duration -2147483647; // 68 fucking years
	}
}

class RalseiGun_Active : PowerupGiver
{
	Default
	{
   	    Powerup.Type "RalseiGun_ActivePowerup";
    	+INVENTORY.AUTOACTIVATE;
		+INVENTORY.UNDROPPABLE;
		+INVENTORY.PERSISTENTPOWER;
	}
}

class RalseiGun_HealPowerUp : Powerup
{
	Default
	{
   	    Powerup.Duration -15;
	}
}

class RalseiGun_HealCD : PowerupGiver
{
	Default
	{
   	    Powerup.Type "RalseiGun_HealPowerUp";
   	    +INVENTORY.AUTOACTIVATE;
	    +INVENTORY.UNDROPPABLE;
	}
}

class RalseiGun_RalseiHealThing: Medikit
{
    States
    {
    Pickup:
        TNT1 A 0 HealThing(frandom(20, 50), 200);
        Stop;
    } 
}

// ralsei!
class RalseiGun_Ralsei : Actor
{
	Int IdleTic;
	Int TeleTic;
	Int CGChance; // 85
	Int SSGChance; // 75
	Int RLChance; // 55
	Int PGChance; // 30
	Int RangeChance; // 65
	Default
	{
		Monster;
		Health 1000;
		Radius 8;
		Height 40;
		Mass 100;
		Speed 3;
		PainChance 255;
		Damage 0;
		XScale 1;
		YScale 1;
		Activation THINGSPEC_Switch;
		-COUNTKILL
		+USESPECIAL
		+LOOKALLAROUND
		+FLOORCLIP
		+FRIENDLY
		+NOTAUTOAIMED
		+SHOOTABLE
		+SLIDESONWALLS
		+DONTMORPH
		+AVOIDHAZARDS
		+NOBLOCKMONST
		-FALLDAMAGE
		+ALWAYSRESPAWN
		+QUICKTORETALIATE
		+NOICEDEATH
		+BUDDHA
		+AVOIDMELEE
		+BOSS
		MaxStepHeight 48;
		MaxDropOffHeight 48;
		SeeSound "Ralsei/See";
		PainSound "Ralsei/Pain";
		DamageFactor "RalseiGun_BuildDamage", 0;
		DamageFactor "RalseiGun_Damage", 0;
	}
	override int TakeSpecialDamage(Actor inflictor, Actor source, int damage, Name damagetype)
	{
		if (source && (source.player || source is "RalseiGun_Ralsei"))
		{
			SetStateLabel("Defend");
			return 0;
		}
        // A_StartSound("Ralsei/Pain", CHAN_BODY, CHANF_DEFAULT, 10.0, ATTN_NONE);
		return super.TakeSpecialDamage(inflictor, source, damage, damagetype);
	}
	Override Void PostBeginPlay()
	{
		Super.PostBeginPlay();
		// set chances
		CGChance = 85; // default: 85
		SSGChance = 75; // default: 75
		RLChance = 55; // default: 55
		PGChance = 30; // default: 30
		RangeChance = 64; // default: 64
		SetStateLabel("Intro");
		// A_StartSound("FM/IntroSFX", CHAN_AUTO);
	}
	override void Tick() 
	{
		super.Tick();
		if (isFrozen())
		{
			return;
		}
		if (FALSE) // (!master) i might delete this
		{
			Spawn("TeleportFog", (pos.x, pos.y, pos.z + height * 0.5));
			Destroy();
			return;
		}
		if (health < default.health)
		{
			A_SetHealth(health + 1);
		}
		if (health <= 5 && !InStateSequence(curstate, FindState("FakeDeath")))
		{
			A_SetHealth(default.health);
			SetStateLabel("FakeDeath");
		}
	}
	Override bool CanCollideWith(Actor other, bool Passive)
	{
		If(!Other) 
		Return False;
		If(Other && !Passive)
		{
			If(Other.Player)
			{
				If(!Deathmatch) 
				Return False;
				Else If(Deathmatch && Other == Master) 
				Return False;
			}			
			If(Other.bMISSILE && Other.Target && Other.Target.Player)
			{
				If(!Deathmatch) 
				Return False;
				Else If(Deathmatch && Other.Target == Master) 
				Return False;
			}			
			Return True;
		}
		If(Other && Passive)
		{
			If(Other.Player)
			{
				If(!Deathmatch) 
				Return False;
				Else If(Deathmatch && Other == Master) 
				Return False;
			}			
			If(Other.bMISSILE && Other.Target && Other.Target.Player)
			{
				If(!Deathmatch) 
				Return False;
				Else If(Deathmatch && Other.Target == Master) 
				Return False;
			}
			Return True;
		}
		Return True;
	}	
	States
	{
    Spawn:
		RALS D 1 Bright A_Look;
		TNT1 A 0 A_CheckSight("TeleTic");
		// TNT1 A 0 A_SetSpecial(130, 0);
		Loop;
	Intro:
		TNT1 A 0 A_Warp(AAPTR_MASTER, 48, -24, 0, 0, WARPF_STOP|WARPF_TOFLOOR|WARPF_COPYINTERPOLATION);
		RABI A 15 Bright; // wait a bit 
		TNT1 A 0
		{
			Console.Printf("\cdRalsei: Get ready, %s!", master.player.GetUserName());
		}
		TNT1 A 0 A_StartSound("Ralsei/Speak1", CHAN_VOICE);
		RABI ABCDEFGHI 3 Bright;
		Goto See;
	Defend: 
		TNT1 A 0
		{
			Console.Printf("\cdRalsei: %s, I'm not a demon!", master.player.GetUserName());
		}
		RLSD ABCDEFGH 3 Bright A_StartSound("Ralsei/Speak1", CHAN_VOICE);
		RLSD GFEDCBA 3 Bright;
		Goto See;
	Active:
		TNT1 A 0
		{	
			bUSESPECIAL = 0;
			let pl = master;
			if (pl.FindInventory("RalseiGun_StayPowerup"))
			{
				pl.TakeInventory("RalseiGun_StayPowerup", 1);
				pl.GiveInventory("RalseiGun_ActivePowerup", 1);
				Console.Printf("\cdRalsei: Let's get back to battling!");
				A_StartSound("Ralsei/Speak1", CHAN_VOICE);
			}
			else if (pl.FindInventory("RalseiGun_ActivePowerup"))
			{
				pl.TakeInventory("RalseiGun_ActivePowerup", 1);
				pl.GiveInventory("RalseiGun_StayPowerup", 1);
				Console.Printf("\cdRalsei: Okay %s, I'll stay here.", master.player.GetUserName());
				A_StartSound("Ralsei/Speak1", CHAN_VOICE);
			}
			bUSESPECIAL = 1;
		}
		Goto See;
	Deactivate:
		TNT1 A 0
		{	
			bUSESPECIAL = 0;
			let pl = master;
			if (pl.FindInventory("RalseiGun_StayPowerup"))
			{
				pl.TakeInventory("RalseiGun_StayPowerup", 1);
				pl.GiveInventory("RalseiGun_ActivePowerup", 1);
				Console.Printf("\cdRalsei: Let's get back to battling!");
				A_StartSound("Ralsei/Speak1", CHAN_VOICE);
			}
			else if (pl.FindInventory("RalseiGun_ActivePowerup"))
			{
				pl.TakeInventory("RalseiGun_ActivePowerup", 1);
				pl.GiveInventory("RalseiGun_StayPowerup", 1);
				Console.Printf("\cdRalsei: Okay %s, I'll stay here.", master.player.GetUserName());
				A_StartSound("Ralsei/Speak1", CHAN_VOICE);
			}
			bUSESPECIAL = 1;
		}
		Goto See;
	See:
		RALS AAAABBBBCCCCDDDD 1 Bright
		{
			If (Master && Distance3D(master) < 75)
			{   
				Return ResolveState("Stand");
			}
			If (CheckInventory("RalseiGun_StayPowerup", 1, AAPTR_MASTER))
			{
				Return ResolveState("Stand");
			}
            A_Chase("Melee", "Missile", CHF_FASTCHASE);
			A_Recoil(-1);
			Return ResolveState(Null);
		}
		TNT1 A 0 A_JumpIfInventory("RalseiGun_StayPowerup", 1, "Stand");
		TNT1 A 0 A_JumpIfHealthLower(30, "Heal", AAPTR_MASTER);
		TNT1 A 0 A_CheckSight("TeleTic");
		Loop;
	Victory:
		RALS AAAABBBBCCCCDDDD 3 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		TNT1 A 0 A_StartSound("Ralsei/Speak1", CHAN_VOICE);
		RALV ABCDEFGHIJK 3 Bright A_Stop;
		Goto See;
	Sit:
		RLSS F 1 Bright;
	Stand:
		TNT1 A 0
		{ 
			if (CheckInventory("RalseiGun_StayPowerup", 1, AAPTR_MASTER))
			{
				SetStateLabel("Sit");
			}
		}
		RALS D 1 Bright
		{ 
			If (IdleTic >= GetCVar("RalseiGun_RalseiBlinkTalk"))
            {
                IdleTic = 0;
            }
            IdleTic++;
			A_Chase("Melee", "Missile", CHF_NOPLAYACTIVE|CHF_DONTMOVE);
		}
		TNT1 A 0 A_JumpIfHealthLower(30, "Heal", AAPTR_MASTER);
		Goto See;
	Heal:
        TNT1 A 0 A_JumpIfInventory("RalseiGun_HealPowerup", 1, "Stand");
        TNT1 A 0 A_GiveInventory("RalseiGun_HealCD", 1);
		TNT1 A 0 A_ClearTarget;
		RLHE A 1 Bright;
		TNT1 A 0 A_StartSound("Ralsei/HealA");
		RLHE A 2 Bright;
		RLHE BCDEFGH 3 Bright;
		TNT1 A 0 A_StartSound("Ralsei/HealB");
		TNT1 A 0 A_GiveInventory("RalseiGun_RalseiHealThing", 1, AAPTR_MASTER);
		RLHE IJKLM 3 Bright;
		Goto Stand;
	TeleTic:
        TNT1 A 0 
        {
            if (teletic >= 5)
            {
            A_ClearTarget();
				teletic = 0;
				SetStateLabel("Teleport");
            }
			teletic++;
        }
        Goto See;
	Teleport:
		TNT1 A 0
		{
			bSHOOTABLE = false;
			bNEVERTARGET = true;
		}
		TNT1 A 0 A_StartSound("Ralsei/Revived", CHAN_VOICE);
		RLRU JIGFEDCBA 2 Bright;
		TNT1 A 10;
		TNT1 A 0 A_Warp(AAPTR_MASTER, 32, -32, 0, 0, WARPF_STOP|WARPF_TOFLOOR|WARPF_COPYINTERPOLATION);
		TNT1 A 0 A_StartSound("Ralsei/Revived", CHAN_VOICE);
		RLRU ABCDEFGIJ 2 Bright;
		TNT1 A 0
		{
			bSHOOTABLE = true;
			bNEVERTARGET = false;
		}
		Goto See;
	Melee:
		// TNT1 A 0 A_JumpIfInventory("RalseiGun_PassivePowerup", 1, "See");
		// TNT1 A 0 Bright A_Jump(64, "Missile");
		RATK A 2 Bright;
		TNT1 A 0
		{
			IdleTic = 0;
			A_FaceTarget();
			A_Recoil(-3);
		}
		RATK BCD 3 Bright;
		TNT1 A 0 A_Stop;
		RATK EF 3 Bright A_CustomMeleeAttack(random(5,10)*random(5,10),"Ralsei/Melee");
		RALS DCBA 3 Bright;
		Goto See;
	Missile:
		// TNT1 A 0 A_JumpIfInventory("RalseiGun_PassivePowerup", 1, "See");
		TNT1 A 0 A_Jump(85,"Chaingun");
		TNT1 A 0 A_Jump(75,"SuperShotgun");
		TNT1 A 0 A_Jump(55,"Rocket");
		TNT1 A 0 A_Jump(30,"Plasma");
	Shotgun:
		TNT1 A 0 A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
		RALS E 1 Bright A_FaceTarget;
		RALS F 2 Bright
		{
			IdleTic = 0;
			A_StartSound("weapons/shotgf", CHAN_WEAPON);
			A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
			A_FaceTarget();
			A_AlertMonsters(0, AMF_TARGETEMITTER);
			A_CustomBulletAttack(5.6, 0, 7, 5, "RalseiGun_Puff");
		}
		RALS F 6 Bright A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
		RALS E 1 Bright;
		RALS AAAABBBBCCCCDDDD 1 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		RALS AAAABBBBCCC 1 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		Goto See;
	SuperShotgun:
		TNT1 A 0 A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
		RALS E 1 Bright A_FaceTarget;
		RALS F 1 Bright 
		{
			IdleTic = 0;
			A_StartSound ("weapons/sshotf", CHAN_WEAPON);
			A_CustomBulletAttack (11.2, 7.1, 20, 5, "RalseiGun_Puff");
			A_AlertMonsters(0,AMF_TARGETEMITTER);
			A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
		}
		RALS F 6 Bright A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
		RALS E 1 Bright;
		RALS AAAABBBBCCCCD 1 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		TNT1 A 0 A_StartSound ("weapons/sshoto", CHAN_WEAPON);
		RALS DDAAAABBBBCCC 1 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		TNT1 A 0 A_StartSound ("weapons/sshotl", CHAN_WEAPON);
		RALS CDDDDAAAABBBB 1 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		TNT1 A 0 A_StartSound ("weapons/sshotc", CHAN_WEAPON);
		RALS CCCCDDDD 1 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		Goto See;
	Chaingun:

		RALS E 2 Bright A_FaceTarget;
		RALS F 2 Bright 
		{	
			IdleTic = 0;
			A_StartSound("weapons/chngun", CHAN_WEAPON);
			A_CustomBulletAttack(5.6, 0, 1, 5, "RalseiGun_Puff");
			A_AlertMonsters(0, AMF_TARGETEMITTER);
			A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
			A_Chase(Null, Null, CHF_FASTCHASE);
		}
		RALS E 2 Bright A_FaceTarget;
		RALS F 2 Bright 
		{	
			A_StartSound("weapons/chngun", CHAN_WEAPON);
			A_CustomBulletAttack(5.6, 0, 1, 5, "RalseiGun_Puff");
		}
		RALS E 2 Bright A_FaceTarget;
		RALS F 2 Bright 
		{	
			A_StartSound("weapons/chngun", CHAN_WEAPON);
			A_CustomBulletAttack(5.6, 0, 1, 5, "RalseiGun_Puff");
			A_AlertMonsters(0,AMF_TARGETEMITTER);
			A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
			A_Chase(Null, Null, CHF_FASTCHASE);
		}
		RALS E 2 Bright A_FaceTarget;
		RALS F 2 Bright 
		{	
			A_StartSound("weapons/chngun", CHAN_WEAPON);
			A_CustomBulletAttack(5.6, 0, 1, 5, "RalseiGun_Puff");
			A_AlertMonsters(0,AMF_TARGETEMITTER);
		}
		TNT1 A 0 A_Jump(166, "See");
		TNT1 A 0 A_MonsterRefire(0, "See");
		Goto Chaingun;
	Rocket:

		TNT1 A 0 A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
		RALS E 1 Bright A_FaceTarget;
		RALS F 8 Bright 
		{
			IdleTic = 0;
			A_SpawnProjectile("RalseiGun_Rocket");
			A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
			A_AlertMonsters(0,AMF_TARGETEMITTER);
		}
		RALS E 1 Bright;
		Goto See;
	Plasma:

		RALS E 2 Bright A_FaceTarget;
		RALS F 1 Bright 
		{
			IdleTic = 0;
			A_SpawnProjectile("RalseiGun_Plasma");
			A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
			A_AlertMonsters(0,AMF_TARGETEMITTER);
		}

		RALS E 2 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		RALS F 1 Bright 
		{
			A_FaceTarget();
			A_SpawnProjectile("RalseiGun_Plasma");
			A_AlertMonsters(0,AMF_TARGETEMITTER);
		}

		RALS E 2 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		RALS F 1 Bright 
		{
			A_FaceTarget();
			A_SpawnProjectile("RalseiGun_Plasma");
			A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
			A_AlertMonsters(0,AMF_TARGETEMITTER);
		}

		RALS E 2 Bright A_Chase(Null, Null, CHF_FASTCHASE);
		RALS F 1 Bright 
		{
			A_FaceTarget();
			A_SpawnProjectile("RalseiGun_Plasma");
			A_AlertMonsters(0,AMF_TARGETEMITTER);
		}

		RALS E 1 Bright;
		TNT1 A 0 A_Jump(166,"See");
		TNT1 A 0 A_MonsterRefire(0,"See");
		Goto Plasma;
	Pain:
		RALS G 2 Bright A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
		RALS G 2 Bright Fast
		{
			A_Pain();
			A_ChangeVelocity(random(2, 10), random(-10, 10), random(1, 2), CVF_RELATIVE);
		}
		TNT1 A 0 A_ChangeVelocity(random(1,4), random(-5,5), random(1, 2), CVF_RELATIVE);
		Goto See;
	FakeDeath:
		/*
		alt. death
		TNT1 A 0 A_StartSound("Ralsei/Explode", CHAN_BODY, CHANF_DEFAULT, 1.0, ATTN_NONE);
		RLDR AAA 3 Bright;
		RLDR AAAABBB 1 Bright;
		TNT1 A 0 A_StartSound("Ralsei/Revive");
		RLDR CCC 1 Bright;
		RLDR DEFGHIJKKK 3 Bright;
		RLDR L 100;
		*/
		TNT1 A 0 
		{
			bNEVERTARGET = false;
			bSHOOTABLE = true;
		}
		TNT1 A 0 A_StartSound("Ralsei/Death", CHAN_BODY, CHANF_DEFAULT, 1.5, ATTN_NONE);
		RALS A 50 Bright;
		TNT1 A 0
		{
			bNEVERTARGET = true;
			bSHOOTABLE = false;
		}
		TNT1 A 0 A_StartSound("Ralsei/Explode", CHAN_BODY, CHANF_DEFAULT, 1.0, ATTN_NONE);
		RALD ABCDEFG 3 Bright;
		RALD G 100;
	FakeRaise:
		TNT1 A 0 
		{
			A_StartSound("Ralsei/Revived", CHAN_VOICE);
		}
		TNT1 A 0
		{
			A_Warp(AAPTR_MASTER, 32, -32, 0, 0, WARPF_STOP|WARPF_TOFLOOR|WARPF_COPYINTERPOLATION);
		}
		RLRU ABCDEFGIJ 3 Bright;
		TNT1 A 0
		{
			bSHOOTABLE = true;
			bNEVERTARGET = false;
		}
		Goto See;
    }
}